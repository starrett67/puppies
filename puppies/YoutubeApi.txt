// The client id is obtained from the Google APIs Console at https://code.google.com/apis/console
// If you run access this code from a server other than http://localhost, you need to register
// your own client id.
var OAUTH2_CLIENT_ID = '697108527193-d64jkbp3u0um4akdjskckssvej6rq0js.apps.googleusercontent.com';
var OAUTH2_SCOPES = [
  'https://www.googleapis.com/auth/youtube'
];

// This callback is invoked by the Google APIs JS client automatically when it is loaded.
googleApiClientReady = function () {
    gapi.auth.init(function () {
        window.setTimeout(checkAuth, 1);
    });
}

// Attempt the immediate OAuth 2 client flow as soon as the page is loaded.
// If the currently logged in Google Account has previously authorized OAUTH2_CLIENT_ID, then
// it will succeed with no user intervention. Otherwise, it will fail and the user interface
// to prompt for authorization needs to be displayed.
function checkAuth() {
    gapi.auth.authorize({
        client_id: OAUTH2_CLIENT_ID,
        scope: OAUTH2_SCOPES,
        immediate: true
    }, handleAuthResult);
}

// Handles the result of a gapi.auth.authorize() call.
function handleAuthResult(authResult) {
    if (authResult) {
        // Auth was successful; hide the things related to prompting for auth and show the things
        // that should be visible after auth succeeds.
        $('.pre-auth').hide();
        loadAPIClientInterfaces();
    } else {
        // Make the #login-link clickable, and attempt a non-immediate OAuth 2 loclient flow.
        // The current function will be called when that flow is complete.
        $('#login-link').click(function () {
            gapi.auth.authorize({
                client_id: OAUTH2_CLIENT_ID,
                scope: OAUTH2_SCOPES,
                immediate: false
            }, handleAuthResult);
        });
    }
}

// Loads the client interface for the YouTube Analytics and Data APIs.
// This is required before using the Google APIs JS client; more info is available at
// http://code.google.com/p/google-api-ja
function loadAPIClientInterfaces() {
    gapi.client.load('youtube', 'v3', function () {
        handleAPILoaded();
    });
}


// Once the api loads call enable the search box.
function handleAPILoaded() {
    $('#search-button').attr('disabled', false);
}

// Search for a given string.
function search(val, container) {
    if ($('#' + container).html().indexOf("iframe") > 0 ) {
        $('#' + container).html('');
        return;
    }
    var q = val;
    console.log(gapi);
    var request = gapi.client.youtube.search.list({
        q: q,
        part: 'snippet'
    });

    request.execute(function (response) {
        console.log(response);
        console.log(response.log);
        var videoID = response.items[0].id.videoId;
        $('#' + container).html('<iframe width="420" height="315" src="//www.youtube.com/embed/' + videoID + '" frameborder="0" allowfullscreen></iframe>');
    });
}

//fillstore page including filling it with youtube results
function fillStorePage() {
         $.ajax({
             url: 'https://api.stackmob.com/Products',
             headers: requestHeaders, //set the headers
             type: 'GET',
             success: function (data, textStatus, xhr) {
                 console.log(data);
                 for (var i = 0; i < data.length; i++) {
                     var length = Math.abs(data.length);
                     var Name = data[i].Name;
                     var description = data[i].description;
                     var price = data[i].Price;
                     var imgSource = data[i].pic_url;
                     var temp = Name.split(' ');
                     var jName = "";
                     for (var j = 0; j < temp.length; j++) {
                         jName += temp[j];
                     }
                     var Javascript = "Javascript:search('" + jName + "', 'SearchResults" + jName + "');";
                     var buyJavascript = "Javascript:buyPuppy('" + data[i].products_id + "', '" + price + ".0');";
                     console.log(Javascript);
                     if (i % 4 == 0 || i == 0) {
                         //need a new row
                         document.getElementById("container").innerHTML += '<div class="row text-center">';
                     }
                     document.getElementById("container").innerHTML += '<div class="col-lg-3 col-md-6 hero-feature"><div class="thumbnail">' +
                        '<img src="' + imgSource + '" /><div class="caption"><h3>' + Name + ' - $' + price + '</h3><p>' + description + '<p id="' + Name + '">' +
                        '<a href="' + buyJavascript + '" class="btn btn-primary">Buy Now!</a> <a href="' + Javascript + '" class="btn btn-default"> Youtube </a>' +
                        '<div id="SearchResults' + jName + '"></div></div></div>'
                     if (((i + 1) % 4 == 0 && i >= 3) || (i + 1) == data.length) {
                         document.getElementById("container").innerHTML += '</div>';
                     }
                 }
                 //TODO: markup the products dynamicly by looping through returned object
                 //and putting into the page as html
             },
             error: function (xhr, textStatus, error) {
                 console.debug(error);
             }
         });
         console.log("exit");
     }

